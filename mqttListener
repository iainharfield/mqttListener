#!/usr/bin/env python

import logging
# Remove all handlers associated with the root logger object.
#for handler in logging.root.handlers[:]:
#    logging.root.removeHandler(handler)
import logging.handlers 
print(logging.handlers)

# Configure logging
logging.basicConfig(
	level=logging.INFO,
        format="%(message)s",
	handlers=[
        	logging.handlers.TimedRotatingFileHandler("app.log", when='midnight',  backupCount=7),
        	logging.StreamHandler() 
	])

import time
import paho.mqtt.client as mqtt
import paho.mqtt.publish as publish

mqttBroker = "192.168.1.130"            # ip of broker	    		
mqttPort =  1883


# MQTT Topics
log_topic = "/house/service/log"	    # MQTT topic that apps send log messages to


# mqtt section

# when connecting to mqtt do this;
def on_connect(client, userdata, flags, rc):
    print("Connected to MQTT broker with result code "+str(rc))
    client.subscribe(log_topic)
    return


# when receiving a mqtt message do this;
def on_message(client, userdata, msg):
    message = msg.payload.decode('utf-8')
    #print(msg.topic + " " + message)
    logging.info(message)

# to send a message
def publish_mqtt(topic, pubData):
    mqttc = mqtt.Client("Openhab MQTT Log server")
    mqttc.connect(mqttBroker, mqttPort)
    mqttc.publish(topic, pubData)
    #mqttc.loop(2) //timeout = 2s

def on_publish(mosq, obj, mid):
    print("mid: " + str(mid))


client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message
client.connect(mqttBroker, 1883, 60)
client.loop_forever()
